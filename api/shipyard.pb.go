// SpaceTraders v2.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: shipyard.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShipyardShipType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ShipType `protobuf:"varint,1,opt,name=type,proto3,enum=macgenius.spacetraders.api.ShipType" json:"type,omitempty"`
}

func (x *ShipyardShipType) Reset() {
	*x = ShipyardShipType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipyard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShipyardShipType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipyardShipType) ProtoMessage() {}

func (x *ShipyardShipType) ProtoReflect() protoreflect.Message {
	mi := &file_shipyard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipyardShipType.ProtoReflect.Descriptor instead.
func (*ShipyardShipType) Descriptor() ([]byte, []int) {
	return file_shipyard_proto_rawDescGZIP(), []int{0}
}

func (x *ShipyardShipType) GetType() ShipType {
	if x != nil {
		return x.Type
	}
	return ShipType_SHIP_PROBE
}

type Shipyard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol       string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ShipTypes    []*ShipyardShipType    `protobuf:"bytes,2,rep,name=ship_types,json=shipTypes,proto3" json:"ship_types,omitempty"`
	Transactions []*ShipyardTransaction `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Ships        []*ShipyardShip        `protobuf:"bytes,4,rep,name=ships,proto3" json:"ships,omitempty"`
}

func (x *Shipyard) Reset() {
	*x = Shipyard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipyard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shipyard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shipyard) ProtoMessage() {}

func (x *Shipyard) ProtoReflect() protoreflect.Message {
	mi := &file_shipyard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shipyard.ProtoReflect.Descriptor instead.
func (*Shipyard) Descriptor() ([]byte, []int) {
	return file_shipyard_proto_rawDescGZIP(), []int{1}
}

func (x *Shipyard) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Shipyard) GetShipTypes() []*ShipyardShipType {
	if x != nil {
		return x.ShipTypes
	}
	return nil
}

func (x *Shipyard) GetTransactions() []*ShipyardTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Shipyard) GetShips() []*ShipyardShip {
	if x != nil {
		return x.Ships
	}
	return nil
}

var File_shipyard_proto protoreflect.FileDescriptor

var file_shipyard_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x79, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1a, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x0f, 0x73, 0x68,
	0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73,
	0x68, 0x69, 0x70, 0x79, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x73, 0x68, 0x69, 0x70, 0x79, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4c,
	0x0a, 0x10, 0x53, 0x68, 0x69, 0x70, 0x79, 0x61, 0x72, 0x64, 0x53, 0x68, 0x69, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68,
	0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x84, 0x02, 0x0a,
	0x08, 0x53, 0x68, 0x69, 0x70, 0x79, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x4b, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75,
	0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x79, 0x61, 0x72, 0x64, 0x53, 0x68, 0x69, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x53,
	0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x79, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x68, 0x69, 0x70, 0x79, 0x61, 0x72, 0x64, 0x53, 0x68, 0x69, 0x70, 0x52, 0x05, 0x73, 0x68,
	0x69, 0x70, 0x73, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x61, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2f, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shipyard_proto_rawDescOnce sync.Once
	file_shipyard_proto_rawDescData = file_shipyard_proto_rawDesc
)

func file_shipyard_proto_rawDescGZIP() []byte {
	file_shipyard_proto_rawDescOnce.Do(func() {
		file_shipyard_proto_rawDescData = protoimpl.X.CompressGZIP(file_shipyard_proto_rawDescData)
	})
	return file_shipyard_proto_rawDescData
}

var file_shipyard_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_shipyard_proto_goTypes = []interface{}{
	(*ShipyardShipType)(nil),    // 0: macgenius.spacetraders.api.ShipyardShipType
	(*Shipyard)(nil),            // 1: macgenius.spacetraders.api.Shipyard
	(ShipType)(0),               // 2: macgenius.spacetraders.api.ShipType
	(*ShipyardTransaction)(nil), // 3: macgenius.spacetraders.api.ShipyardTransaction
	(*ShipyardShip)(nil),        // 4: macgenius.spacetraders.api.ShipyardShip
}
var file_shipyard_proto_depIdxs = []int32{
	2, // 0: macgenius.spacetraders.api.ShipyardShipType.type:type_name -> macgenius.spacetraders.api.ShipType
	0, // 1: macgenius.spacetraders.api.Shipyard.ship_types:type_name -> macgenius.spacetraders.api.ShipyardShipType
	3, // 2: macgenius.spacetraders.api.Shipyard.transactions:type_name -> macgenius.spacetraders.api.ShipyardTransaction
	4, // 3: macgenius.spacetraders.api.Shipyard.ships:type_name -> macgenius.spacetraders.api.ShipyardShip
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_shipyard_proto_init() }
func file_shipyard_proto_init() {
	if File_shipyard_proto != nil {
		return
	}
	file_ship_type_proto_init()
	file_shipyard_ship_proto_init()
	file_shipyard_transaction_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_shipyard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShipyardShipType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipyard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shipyard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shipyard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shipyard_proto_goTypes,
		DependencyIndexes: file_shipyard_proto_depIdxs,
		MessageInfos:      file_shipyard_proto_msgTypes,
	}.Build()
	File_shipyard_proto = out.File
	file_shipyard_proto_rawDesc = nil
	file_shipyard_proto_goTypes = nil
	file_shipyard_proto_depIdxs = nil
}
