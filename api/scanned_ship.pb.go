// SpaceTraders v2.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: scanned_ship.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScannedShipPart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *ScannedShipPart) Reset() {
	*x = ScannedShipPart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanned_ship_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScannedShipPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannedShipPart) ProtoMessage() {}

func (x *ScannedShipPart) ProtoReflect() protoreflect.Message {
	mi := &file_scanned_ship_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScannedShipPart.ProtoReflect.Descriptor instead.
func (*ScannedShipPart) Descriptor() ([]byte, []int) {
	return file_scanned_ship_proto_rawDescGZIP(), []int{0}
}

func (x *ScannedShipPart) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

// The ship that was scanned. Details include information about the ship that could be detected by the scanner.
type ScannedShip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol       string             `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`             // The globally unique identifier of the ship.
	Registration *ShipRegistration  `protobuf:"bytes,2,opt,name=registration,proto3" json:"registration,omitempty"` // The public registration information of the ship.
	Nav          *ShipNav           `protobuf:"bytes,3,opt,name=nav,proto3" json:"nav,omitempty"`                   // The navigation information of the ship.
	Frame        *ScannedShipPart   `protobuf:"bytes,4,opt,name=frame,proto3" json:"frame,omitempty"`               // The frame of the ship.
	Reactor      *ScannedShipPart   `protobuf:"bytes,5,opt,name=reactor,proto3" json:"reactor,omitempty"`           // The reactor of the ship.
	Engine       *ScannedShipPart   `protobuf:"bytes,6,opt,name=engine,proto3" json:"engine,omitempty"`             // The engine of the ship.
	Mounts       []*ScannedShipPart `protobuf:"bytes,7,rep,name=mounts,proto3" json:"mounts,omitempty"`
}

func (x *ScannedShip) Reset() {
	*x = ScannedShip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanned_ship_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScannedShip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannedShip) ProtoMessage() {}

func (x *ScannedShip) ProtoReflect() protoreflect.Message {
	mi := &file_scanned_ship_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScannedShip.ProtoReflect.Descriptor instead.
func (*ScannedShip) Descriptor() ([]byte, []int) {
	return file_scanned_ship_proto_rawDescGZIP(), []int{1}
}

func (x *ScannedShip) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ScannedShip) GetRegistration() *ShipRegistration {
	if x != nil {
		return x.Registration
	}
	return nil
}

func (x *ScannedShip) GetNav() *ShipNav {
	if x != nil {
		return x.Nav
	}
	return nil
}

func (x *ScannedShip) GetFrame() *ScannedShipPart {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *ScannedShip) GetReactor() *ScannedShipPart {
	if x != nil {
		return x.Reactor
	}
	return nil
}

func (x *ScannedShip) GetEngine() *ScannedShipPart {
	if x != nil {
		return x.Engine
	}
	return nil
}

func (x *ScannedShip) GetMounts() []*ScannedShipPart {
	if x != nil {
		return x.Mounts
	}
	return nil
}

var File_scanned_ship_proto protoreflect.FileDescriptor

var file_scanned_ship_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x1a, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x6e, 0x61, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x0f, 0x53, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x53, 0x68, 0x69, 0x70, 0x50, 0x61, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x22, 0xc2, 0x03, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x53, 0x68, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x50, 0x0a, 0x0c,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x68, 0x69, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35,
	0x0a, 0x03, 0x6e, 0x61, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61,
	0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x4e, 0x61, 0x76,
	0x52, 0x03, 0x6e, 0x61, 0x76, 0x12, 0x41, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x68, 0x69, 0x70, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x61, 0x63, 0x67,
	0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x68,
	0x69, 0x70, 0x50, 0x61, 0x72, 0x74, 0x52, 0x07, 0x72, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x43, 0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x53, 0x68, 0x69, 0x70, 0x50, 0x61, 0x72, 0x74, 0x52, 0x06, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x68, 0x69, 0x70, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x06, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x69,
	0x75, 0x73, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scanned_ship_proto_rawDescOnce sync.Once
	file_scanned_ship_proto_rawDescData = file_scanned_ship_proto_rawDesc
)

func file_scanned_ship_proto_rawDescGZIP() []byte {
	file_scanned_ship_proto_rawDescOnce.Do(func() {
		file_scanned_ship_proto_rawDescData = protoimpl.X.CompressGZIP(file_scanned_ship_proto_rawDescData)
	})
	return file_scanned_ship_proto_rawDescData
}

var file_scanned_ship_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_scanned_ship_proto_goTypes = []interface{}{
	(*ScannedShipPart)(nil),  // 0: macgenius.spacetraders.api.ScannedShipPart
	(*ScannedShip)(nil),      // 1: macgenius.spacetraders.api.ScannedShip
	(*ShipRegistration)(nil), // 2: macgenius.spacetraders.api.ShipRegistration
	(*ShipNav)(nil),          // 3: macgenius.spacetraders.api.ShipNav
}
var file_scanned_ship_proto_depIdxs = []int32{
	2, // 0: macgenius.spacetraders.api.ScannedShip.registration:type_name -> macgenius.spacetraders.api.ShipRegistration
	3, // 1: macgenius.spacetraders.api.ScannedShip.nav:type_name -> macgenius.spacetraders.api.ShipNav
	0, // 2: macgenius.spacetraders.api.ScannedShip.frame:type_name -> macgenius.spacetraders.api.ScannedShipPart
	0, // 3: macgenius.spacetraders.api.ScannedShip.reactor:type_name -> macgenius.spacetraders.api.ScannedShipPart
	0, // 4: macgenius.spacetraders.api.ScannedShip.engine:type_name -> macgenius.spacetraders.api.ScannedShipPart
	0, // 5: macgenius.spacetraders.api.ScannedShip.mounts:type_name -> macgenius.spacetraders.api.ScannedShipPart
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_scanned_ship_proto_init() }
func file_scanned_ship_proto_init() {
	if File_scanned_ship_proto != nil {
		return
	}
	file_ship_nav_proto_init()
	file_ship_registration_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_scanned_ship_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScannedShipPart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanned_ship_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScannedShip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scanned_ship_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scanned_ship_proto_goTypes,
		DependencyIndexes: file_scanned_ship_proto_depIdxs,
		MessageInfos:      file_scanned_ship_proto_msgTypes,
	}.Build()
	File_scanned_ship_proto = out.File
	file_scanned_ship_proto_rawDesc = nil
	file_scanned_ship_proto_goTypes = nil
	file_scanned_ship_proto_depIdxs = nil
}
