// SpaceTraders v2.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: ship_nav.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShipNavStatus int32

const (
	ShipNavStatus_IN_TRANSIT ShipNavStatus = 0
	ShipNavStatus_IN_ORBIT   ShipNavStatus = 1
	ShipNavStatus_DOCKED     ShipNavStatus = 2
)

// Enum value maps for ShipNavStatus.
var (
	ShipNavStatus_name = map[int32]string{
		0: "IN_TRANSIT",
		1: "IN_ORBIT",
		2: "DOCKED",
	}
	ShipNavStatus_value = map[string]int32{
		"IN_TRANSIT": 0,
		"IN_ORBIT":   1,
		"DOCKED":     2,
	}
)

func (x ShipNavStatus) Enum() *ShipNavStatus {
	p := new(ShipNavStatus)
	*p = x
	return p
}

func (x ShipNavStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShipNavStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ship_nav_proto_enumTypes[0].Descriptor()
}

func (ShipNavStatus) Type() protoreflect.EnumType {
	return &file_ship_nav_proto_enumTypes[0]
}

func (x ShipNavStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShipNavStatus.Descriptor instead.
func (ShipNavStatus) EnumDescriptor() ([]byte, []int) {
	return file_ship_nav_proto_rawDescGZIP(), []int{0}
}

// The navigation information of the ship.
type ShipNav struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemSymbol   string            `protobuf:"bytes,1,opt,name=system_symbol,json=systemSymbol,proto3" json:"system_symbol,omitempty"`                                              // The system symbol of the ship's current location.
	WaypointSymbol string            `protobuf:"bytes,2,opt,name=waypoint_symbol,json=waypointSymbol,proto3" json:"waypoint_symbol,omitempty"`                                        // The waypoint symbol of the ship's current location, or if the ship is in-transit, the waypoint symbol of the ship's destination.
	Route          *ShipNavRoute     `protobuf:"bytes,3,opt,name=route,proto3" json:"route,omitempty"`                                                                                // The routing information for the ship's most recent transit or current location.
	Status         ShipNavStatus     `protobuf:"varint,4,opt,name=status,proto3,enum=macgenius.spacetraders.api.ShipNavStatus" json:"status,omitempty"`                               // The current status of the ship.
	FlightMode     ShipNavFlightMode `protobuf:"varint,5,opt,name=flight_mode,json=flightMode,proto3,enum=macgenius.spacetraders.api.ShipNavFlightMode" json:"flight_mode,omitempty"` // The ship's set speed when traveling between waypoints or systems.
}

func (x *ShipNav) Reset() {
	*x = ShipNav{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ship_nav_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShipNav) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipNav) ProtoMessage() {}

func (x *ShipNav) ProtoReflect() protoreflect.Message {
	mi := &file_ship_nav_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipNav.ProtoReflect.Descriptor instead.
func (*ShipNav) Descriptor() ([]byte, []int) {
	return file_ship_nav_proto_rawDescGZIP(), []int{0}
}

func (x *ShipNav) GetSystemSymbol() string {
	if x != nil {
		return x.SystemSymbol
	}
	return ""
}

func (x *ShipNav) GetWaypointSymbol() string {
	if x != nil {
		return x.WaypointSymbol
	}
	return ""
}

func (x *ShipNav) GetRoute() *ShipNavRoute {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *ShipNav) GetStatus() ShipNavStatus {
	if x != nil {
		return x.Status
	}
	return ShipNavStatus_IN_TRANSIT
}

func (x *ShipNav) GetFlightMode() ShipNavFlightMode {
	if x != nil {
		return x.FlightMode
	}
	return ShipNavFlightMode_DRIFT
}

var File_ship_nav_proto protoreflect.FileDescriptor

var file_ship_nav_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x6e, 0x61, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1a, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1a, 0x73, 0x68,
	0x69, 0x70, 0x5f, 0x6e, 0x61, 0x76, 0x5f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x6e,
	0x61, 0x76, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa,
	0x02, 0x0a, 0x07, 0x53, 0x68, 0x69, 0x70, 0x4e, 0x61, 0x76, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x27, 0x0a, 0x0f, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x3e, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e,
	0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x4e, 0x61, 0x76, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65,
	0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x4e, 0x61, 0x76, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x0b, 0x66,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2d, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68,
	0x69, 0x70, 0x4e, 0x61, 0x76, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x0a, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x2a, 0x39, 0x0a, 0x0d, 0x53,
	0x68, 0x69, 0x70, 0x4e, 0x61, 0x76, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x49, 0x4e, 0x5f, 0x4f, 0x52, 0x42, 0x49, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f,
	0x43, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ship_nav_proto_rawDescOnce sync.Once
	file_ship_nav_proto_rawDescData = file_ship_nav_proto_rawDesc
)

func file_ship_nav_proto_rawDescGZIP() []byte {
	file_ship_nav_proto_rawDescOnce.Do(func() {
		file_ship_nav_proto_rawDescData = protoimpl.X.CompressGZIP(file_ship_nav_proto_rawDescData)
	})
	return file_ship_nav_proto_rawDescData
}

var file_ship_nav_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ship_nav_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ship_nav_proto_goTypes = []interface{}{
	(ShipNavStatus)(0),     // 0: macgenius.spacetraders.api.ShipNavStatus
	(*ShipNav)(nil),        // 1: macgenius.spacetraders.api.ShipNav
	(*ShipNavRoute)(nil),   // 2: macgenius.spacetraders.api.ShipNavRoute
	(ShipNavFlightMode)(0), // 3: macgenius.spacetraders.api.ShipNavFlightMode
}
var file_ship_nav_proto_depIdxs = []int32{
	2, // 0: macgenius.spacetraders.api.ShipNav.route:type_name -> macgenius.spacetraders.api.ShipNavRoute
	0, // 1: macgenius.spacetraders.api.ShipNav.status:type_name -> macgenius.spacetraders.api.ShipNavStatus
	3, // 2: macgenius.spacetraders.api.ShipNav.flight_mode:type_name -> macgenius.spacetraders.api.ShipNavFlightMode
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ship_nav_proto_init() }
func file_ship_nav_proto_init() {
	if File_ship_nav_proto != nil {
		return
	}
	file_ship_nav_flight_mode_proto_init()
	file_ship_nav_route_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ship_nav_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShipNav); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ship_nav_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ship_nav_proto_goTypes,
		DependencyIndexes: file_ship_nav_proto_depIdxs,
		EnumInfos:         file_ship_nav_proto_enumTypes,
		MessageInfos:      file_ship_nav_proto_msgTypes,
	}.Build()
	File_ship_nav_proto = out.File
	file_ship_nav_proto_rawDesc = nil
	file_ship_nav_proto_goTypes = nil
	file_ship_nav_proto_depIdxs = nil
}
