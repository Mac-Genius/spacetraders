// SpaceTraders v2.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: ship.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol       string            `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Registration *ShipRegistration `protobuf:"bytes,2,opt,name=registration,proto3" json:"registration,omitempty"`
	Nav          *ShipNav          `protobuf:"bytes,3,opt,name=nav,proto3" json:"nav,omitempty"`
	Crew         *ShipCrew         `protobuf:"bytes,4,opt,name=crew,proto3" json:"crew,omitempty"`
	Frame        *ShipFrame        `protobuf:"bytes,5,opt,name=frame,proto3" json:"frame,omitempty"`
	Reactor      *ShipReactor      `protobuf:"bytes,6,opt,name=reactor,proto3" json:"reactor,omitempty"`
	Engine       *ShipEngine       `protobuf:"bytes,7,opt,name=engine,proto3" json:"engine,omitempty"`
	Modules      []*ShipModule     `protobuf:"bytes,8,rep,name=modules,proto3" json:"modules,omitempty"`
	Mounts       []*ShipMount      `protobuf:"bytes,9,rep,name=mounts,proto3" json:"mounts,omitempty"`
	Cargo        *ShipCargo        `protobuf:"bytes,10,opt,name=cargo,proto3" json:"cargo,omitempty"`
	Fuel         *ShipFuel         `protobuf:"bytes,11,opt,name=fuel,proto3" json:"fuel,omitempty"`
}

func (x *Ship) Reset() {
	*x = Ship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ship_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ship) ProtoMessage() {}

func (x *Ship) ProtoReflect() protoreflect.Message {
	mi := &file_ship_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ship.ProtoReflect.Descriptor instead.
func (*Ship) Descriptor() ([]byte, []int) {
	return file_ship_proto_rawDescGZIP(), []int{0}
}

func (x *Ship) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Ship) GetRegistration() *ShipRegistration {
	if x != nil {
		return x.Registration
	}
	return nil
}

func (x *Ship) GetNav() *ShipNav {
	if x != nil {
		return x.Nav
	}
	return nil
}

func (x *Ship) GetCrew() *ShipCrew {
	if x != nil {
		return x.Crew
	}
	return nil
}

func (x *Ship) GetFrame() *ShipFrame {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *Ship) GetReactor() *ShipReactor {
	if x != nil {
		return x.Reactor
	}
	return nil
}

func (x *Ship) GetEngine() *ShipEngine {
	if x != nil {
		return x.Engine
	}
	return nil
}

func (x *Ship) GetModules() []*ShipModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *Ship) GetMounts() []*ShipMount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

func (x *Ship) GetCargo() *ShipCargo {
	if x != nil {
		return x.Cargo
	}
	return nil
}

func (x *Ship) GetFuel() *ShipFuel {
	if x != nil {
		return x.Fuel
	}
	return nil
}

var File_ship_proto protoreflect.FileDescriptor

var file_ship_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6d, 0x61,
	0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x63,
	0x61, 0x72, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x73, 0x68, 0x69, 0x70,
	0x5f, 0x63, 0x72, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x73, 0x68, 0x69,
	0x70, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x73, 0x68, 0x69, 0x70, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x66, 0x75, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x6e, 0x61, 0x76,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x73, 0x68, 0x69, 0x70,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x99, 0x05, 0x0a, 0x04, 0x53, 0x68, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x50, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x61, 0x63,
	0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x03, 0x6e, 0x61, 0x76, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x68, 0x69, 0x70, 0x4e, 0x61, 0x76, 0x52, 0x03, 0x6e, 0x61, 0x76, 0x12, 0x38, 0x0a,
	0x04, 0x63, 0x72, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61,
	0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x43, 0x72, 0x65,
	0x77, 0x52, 0x04, 0x63, 0x72, 0x65, 0x77, 0x12, 0x3b, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69,
	0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75,
	0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e,
	0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52,
	0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65,
	0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x63, 0x67,
	0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x4d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x06, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x67,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e,
	0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x05,
	0x63, 0x61, 0x72, 0x67, 0x6f, 0x12, 0x38, 0x0a, 0x04, 0x66, 0x75, 0x65, 0x6c, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x68, 0x69, 0x70, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x04, 0x66, 0x75, 0x65, 0x6c, 0x42,
	0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_ship_proto_rawDescOnce sync.Once
	file_ship_proto_rawDescData = file_ship_proto_rawDesc
)

func file_ship_proto_rawDescGZIP() []byte {
	file_ship_proto_rawDescOnce.Do(func() {
		file_ship_proto_rawDescData = protoimpl.X.CompressGZIP(file_ship_proto_rawDescData)
	})
	return file_ship_proto_rawDescData
}

var file_ship_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ship_proto_goTypes = []interface{}{
	(*Ship)(nil),             // 0: macgenius.spacetraders.api.Ship
	(*ShipRegistration)(nil), // 1: macgenius.spacetraders.api.ShipRegistration
	(*ShipNav)(nil),          // 2: macgenius.spacetraders.api.ShipNav
	(*ShipCrew)(nil),         // 3: macgenius.spacetraders.api.ShipCrew
	(*ShipFrame)(nil),        // 4: macgenius.spacetraders.api.ShipFrame
	(*ShipReactor)(nil),      // 5: macgenius.spacetraders.api.ShipReactor
	(*ShipEngine)(nil),       // 6: macgenius.spacetraders.api.ShipEngine
	(*ShipModule)(nil),       // 7: macgenius.spacetraders.api.ShipModule
	(*ShipMount)(nil),        // 8: macgenius.spacetraders.api.ShipMount
	(*ShipCargo)(nil),        // 9: macgenius.spacetraders.api.ShipCargo
	(*ShipFuel)(nil),         // 10: macgenius.spacetraders.api.ShipFuel
}
var file_ship_proto_depIdxs = []int32{
	1,  // 0: macgenius.spacetraders.api.Ship.registration:type_name -> macgenius.spacetraders.api.ShipRegistration
	2,  // 1: macgenius.spacetraders.api.Ship.nav:type_name -> macgenius.spacetraders.api.ShipNav
	3,  // 2: macgenius.spacetraders.api.Ship.crew:type_name -> macgenius.spacetraders.api.ShipCrew
	4,  // 3: macgenius.spacetraders.api.Ship.frame:type_name -> macgenius.spacetraders.api.ShipFrame
	5,  // 4: macgenius.spacetraders.api.Ship.reactor:type_name -> macgenius.spacetraders.api.ShipReactor
	6,  // 5: macgenius.spacetraders.api.Ship.engine:type_name -> macgenius.spacetraders.api.ShipEngine
	7,  // 6: macgenius.spacetraders.api.Ship.modules:type_name -> macgenius.spacetraders.api.ShipModule
	8,  // 7: macgenius.spacetraders.api.Ship.mounts:type_name -> macgenius.spacetraders.api.ShipMount
	9,  // 8: macgenius.spacetraders.api.Ship.cargo:type_name -> macgenius.spacetraders.api.ShipCargo
	10, // 9: macgenius.spacetraders.api.Ship.fuel:type_name -> macgenius.spacetraders.api.ShipFuel
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_ship_proto_init() }
func file_ship_proto_init() {
	if File_ship_proto != nil {
		return
	}
	file_ship_cargo_proto_init()
	file_ship_crew_proto_init()
	file_ship_engine_proto_init()
	file_ship_frame_proto_init()
	file_ship_fuel_proto_init()
	file_ship_module_proto_init()
	file_ship_mount_proto_init()
	file_ship_nav_proto_init()
	file_ship_reactor_proto_init()
	file_ship_registration_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ship_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ship_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ship_proto_goTypes,
		DependencyIndexes: file_ship_proto_depIdxs,
		MessageInfos:      file_ship_proto_msgTypes,
	}.Build()
	File_ship_proto = out.File
	file_ship_proto_rawDesc = nil
	file_ship_proto_goTypes = nil
	file_ship_proto_depIdxs = nil
}
