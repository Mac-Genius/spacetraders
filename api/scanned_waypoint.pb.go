// SpaceTraders v2.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: scanned_waypoint.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A waypoint is a location that ships can travel to such as a Planet, Moon or Space Station.
type ScannedWaypoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol       string             `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Type         WaypointType       `protobuf:"varint,2,opt,name=type,proto3,enum=macgenius.spacetraders.api.wp.WaypointType" json:"type,omitempty"` // The type of waypoint.
	SystemSymbol string             `protobuf:"bytes,3,opt,name=system_symbol,json=systemSymbol,proto3" json:"system_symbol,omitempty"`
	X            int32              `protobuf:"varint,4,opt,name=x,proto3" json:"x,omitempty"`
	Y            int32              `protobuf:"varint,5,opt,name=y,proto3" json:"y,omitempty"`
	Orbitals     []*WaypointOrbital `protobuf:"bytes,6,rep,name=orbitals,proto3" json:"orbitals,omitempty"`
	Faction      *WaypointFaction   `protobuf:"bytes,7,opt,name=faction,proto3" json:"faction,omitempty"`
	Traits       []*WaypointTrait   `protobuf:"bytes,8,rep,name=traits,proto3" json:"traits,omitempty"` // The traits of the waypoint.
	Chart        *Chart             `protobuf:"bytes,9,opt,name=chart,proto3" json:"chart,omitempty"`   // The chart of a system or waypoint, which makes the location visible to other agents.
}

func (x *ScannedWaypoint) Reset() {
	*x = ScannedWaypoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanned_waypoint_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScannedWaypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannedWaypoint) ProtoMessage() {}

func (x *ScannedWaypoint) ProtoReflect() protoreflect.Message {
	mi := &file_scanned_waypoint_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScannedWaypoint.ProtoReflect.Descriptor instead.
func (*ScannedWaypoint) Descriptor() ([]byte, []int) {
	return file_scanned_waypoint_proto_rawDescGZIP(), []int{0}
}

func (x *ScannedWaypoint) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ScannedWaypoint) GetType() WaypointType {
	if x != nil {
		return x.Type
	}
	return WaypointType_PLANET
}

func (x *ScannedWaypoint) GetSystemSymbol() string {
	if x != nil {
		return x.SystemSymbol
	}
	return ""
}

func (x *ScannedWaypoint) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ScannedWaypoint) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ScannedWaypoint) GetOrbitals() []*WaypointOrbital {
	if x != nil {
		return x.Orbitals
	}
	return nil
}

func (x *ScannedWaypoint) GetFaction() *WaypointFaction {
	if x != nil {
		return x.Faction
	}
	return nil
}

func (x *ScannedWaypoint) GetTraits() []*WaypointTrait {
	if x != nil {
		return x.Traits
	}
	return nil
}

func (x *ScannedWaypoint) GetChart() *Chart {
	if x != nil {
		return x.Chart
	}
	return nil
}

var File_scanned_waypoint_proto protoreflect.FileDescriptor

var file_scanned_waypoint_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e,
	0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x1a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x77, 0x61, 0x79, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x14, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x03, 0x0a,
	0x0f, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69,
	0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x70, 0x2e, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x47, 0x0a, 0x08, 0x6f, 0x72,
	0x62, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d,
	0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x08, 0x6f, 0x72, 0x62, 0x69, 0x74,
	0x61, 0x6c, 0x73, 0x12, 0x45, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x46, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x06, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x61, 0x63,
	0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x54, 0x72, 0x61, 0x69, 0x74, 0x52, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x12, 0x37, 0x0a,
	0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d,
	0x61, 0x63, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52,
	0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x2f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scanned_waypoint_proto_rawDescOnce sync.Once
	file_scanned_waypoint_proto_rawDescData = file_scanned_waypoint_proto_rawDesc
)

func file_scanned_waypoint_proto_rawDescGZIP() []byte {
	file_scanned_waypoint_proto_rawDescOnce.Do(func() {
		file_scanned_waypoint_proto_rawDescData = protoimpl.X.CompressGZIP(file_scanned_waypoint_proto_rawDescData)
	})
	return file_scanned_waypoint_proto_rawDescData
}

var file_scanned_waypoint_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_scanned_waypoint_proto_goTypes = []interface{}{
	(*ScannedWaypoint)(nil), // 0: macgenius.spacetraders.api.ScannedWaypoint
	(WaypointType)(0),       // 1: macgenius.spacetraders.api.wp.WaypointType
	(*WaypointOrbital)(nil), // 2: macgenius.spacetraders.api.WaypointOrbital
	(*WaypointFaction)(nil), // 3: macgenius.spacetraders.api.WaypointFaction
	(*WaypointTrait)(nil),   // 4: macgenius.spacetraders.api.WaypointTrait
	(*Chart)(nil),           // 5: macgenius.spacetraders.api.Chart
}
var file_scanned_waypoint_proto_depIdxs = []int32{
	1, // 0: macgenius.spacetraders.api.ScannedWaypoint.type:type_name -> macgenius.spacetraders.api.wp.WaypointType
	2, // 1: macgenius.spacetraders.api.ScannedWaypoint.orbitals:type_name -> macgenius.spacetraders.api.WaypointOrbital
	3, // 2: macgenius.spacetraders.api.ScannedWaypoint.faction:type_name -> macgenius.spacetraders.api.WaypointFaction
	4, // 3: macgenius.spacetraders.api.ScannedWaypoint.traits:type_name -> macgenius.spacetraders.api.WaypointTrait
	5, // 4: macgenius.spacetraders.api.ScannedWaypoint.chart:type_name -> macgenius.spacetraders.api.Chart
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_scanned_waypoint_proto_init() }
func file_scanned_waypoint_proto_init() {
	if File_scanned_waypoint_proto != nil {
		return
	}
	file_chart_proto_init()
	file_waypoint_faction_proto_init()
	file_waypoint_orbital_proto_init()
	file_waypoint_trait_proto_init()
	file_waypoint_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_scanned_waypoint_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScannedWaypoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scanned_waypoint_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scanned_waypoint_proto_goTypes,
		DependencyIndexes: file_scanned_waypoint_proto_depIdxs,
		MessageInfos:      file_scanned_waypoint_proto_msgTypes,
	}.Build()
	File_scanned_waypoint_proto = out.File
	file_scanned_waypoint_proto_rawDesc = nil
	file_scanned_waypoint_proto_goTypes = nil
	file_scanned_waypoint_proto_depIdxs = nil
}
